[gd_scene load_steps=6 format=2]

[ext_resource path="res://Scripts/MainScene.gd" type="Script" id=1]
[ext_resource path="res://Scenes/square-16.png" type="Texture" id=2]
[ext_resource path="res://Sprites/icon.png" type="Texture" id=3]

[sub_resource type="Shader" id=3]
code = "shader_type canvas_item;

uniform float scan_line_count : hint_range(0, 1080) = 50.0;

vec2 uv_curve(vec2 uv) {
	uv = (uv - 0.5) * 2.0;
	
	uv.x *= 1.0 + pow(abs(uv.y) / 4.0, 2.0);
	uv.y *= 1.0 + pow(abs(uv.x) / 2.5, 2.0);
	
	uv = (uv / 2.0) + 0.5;
	
//	uv /= 1.1;
	return uv;
}

void fragment() {
	float PI = 3.14159;
//	vec4 color = texture(SCREEN_TEXTURE, uv_curve(SCREEN_UV));
	float r = texture(SCREEN_TEXTURE, uv_curve(SCREEN_UV) + vec2(SCREEN_PIXEL_SIZE.x*0.0), 0.0).r;
	float g = texture(SCREEN_TEXTURE, uv_curve(SCREEN_UV) + vec2(SCREEN_PIXEL_SIZE.x*2.0), 0.0).g;
	float b = texture(SCREEN_TEXTURE, uv_curve(SCREEN_UV) + vec2(SCREEN_PIXEL_SIZE.x*-2.0), 0.0).b;

	float s = sin(uv_curve(SCREEN_UV).y * scan_line_count * PI * 2.0);
	s = (s * 0.5 + 0.5) * 0.9 + 0.1;
	
	vec4 scan_line = vec4(vec3(pow(s, 0.25)), 1.0);
//	COLOR = color;
//	COLOR = vec4(r, g, b, 1.0);
	COLOR = vec4(r, g, b, 1.0) * scan_line;
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 3 )
shader_param/scan_line_count = 50.0

[node name="MainScene" type="Node2D"]
script = ExtResource( 1 )

[node name="Icon" type="Sprite" parent="."]
position = Vector2( 113, 162 )
texture = ExtResource( 3 )

[node name="CanvasLayer" type="CanvasLayer" parent="."]

[node name="TextureRect" type="TextureRect" parent="CanvasLayer"]
material = SubResource( 2 )
margin_right = 1908.0
margin_bottom = 1091.0
texture = ExtResource( 2 )
expand = true
